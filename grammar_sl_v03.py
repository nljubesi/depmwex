#!/usr/bin/python
#-*-coding:utf8-*-
from Tree_v05 import Tree, Node, kres_sent_trees,hrwac_sent_trees,merge_reflexive_verb
from collections import defaultdict
import re
import sys
import cPickle as pickle

def grammar_sl_v03():
	names=[]
	patterns=[]
	#dvobesedni veznik	(([msd=G.*]([deprel=vez&msd=.*]([deprel=(skup|dol)&msd=[RZDVL].*])))|(([deprel=vez&msd=.*])([deprel=vez&msd=.*])))
	dvobesedniveznik1=Tree()
	dvobesedniveznik1.add_node(0,dvobesedniveznik1,lambda x:x.data['msd'].startswith('G'))
	dvobesedniveznik1.add_node(1,0,lambda x:x.data['deprel']=='vez',relation=lambda x:'dvobesedni_veznik1')
	dvobesedniveznik1.add_node(2,1,lambda x:x.data['deprel'] in ('skup','dol') and x.data['msd'][0] in 'RZDVL',relation=lambda x:'dvobesedni_veznik2')
	dvobesedniveznik2=Tree()
	dvobesedniveznik2.add_node(0,dvobesedniveznik2,lambda x:x.data['deprel']=='vez',relation=lambda x:'dvobesedni_veznik1')
	dvobesedniveznik2.add_node(1,0,lambda x:x.data['deprel']=='vez',relation=lambda x:'dvobesedni_veznik2')
	patterns.append(dvobesedniveznik1)
	names.append('dvobesedniveznik1')
	patterns.append(dvobesedniveznik2)
	names.append('dvobesedniveznik2')
	#GBZ %s sbz2	([msd=G.*]([deprel=(dve|tri|štiri)&msd=Dr]([deprel=dol&msd=S...r])))
	# KAJA što je s brojevima, u slovenskom isto brojevi idu s gen, a inače bi s akuz, ili? staviti četiri dolara, staviti dolar
	gbzdsbz2=Tree()
	gbzdsbz2.add_node(0,gbzdsbz2,lambda x:x.data['msd'].startswith('G'),relation=lambda x:'GBZ '+x.nodes[1].found['lemma']+' sbz2')
	gbzdsbz2.add_node(1,0,lambda x:x.data['deprel'] in ('dve','tri','stiri') and x.data['msd'].startswith('Dr'))
	gbzdsbz2.add_node(2,1,lambda x:x.data['deprel']=='dol' and re.match(r'S...r',x.data['msd'])!=None,relation=lambda x:'gbz '+x.nodes[1].found['lemma']+' SBZ2')
	patterns.append(gbzdsbz2)
	names.append('gbzdsbz2')
	#GBZ %s sbz3	([msd=G.*]([deprel=(dve|tri|štiri)&msd=Dd]([deprel=dol&msd=S...d])))
	gbzdsbz3=Tree()
	gbzdsbz3.add_node(0,gbzdsbz3,lambda x:x.data['msd'].startswith('G'),relation=lambda x:'GBZ '+x.nodes[1].found['lemma']+' sbz3')
	gbzdsbz3.add_node(1,0,lambda x:x.data['deprel'] in ('dve','tri','stiri') and x.data['msd'].startswith('Dd'))
	gbzdsbz3.add_node(2,1,lambda x:x.data['deprel']=='dol' and re.match(r'S...d',x.data['msd'])!=None,relation=lambda x:'gbz '+x.nodes[1].found['lemma']+' SBZ3')
	patterns.append(gbzdsbz3)
	names.append('gbzdsbz3')
	#GBZ %s sbz4	([msd=G.*]([deprel=(dve|tri|štiri)&msd=Dt]([deprel=dol&msd=S...t.*])))
	gbzdsbz4=Tree()
	gbzdsbz4.add_node(0,gbzdsbz4,lambda x:x.data['msd'].startswith('G'),relation=lambda x:'GBZ '+x.nodes[1].found['lemma']+' sbz4')
	gbzdsbz4.add_node(1,0,lambda x:x.data['deprel'] in ('dve','tri','stiri') and x.data['msd'].startswith('Dt'))
	gbzdsbz4.add_node(2,1,lambda x:x.data['deprel']=='dol' and re.match(r'S...t',x.data['msd'])!=None,relation=lambda x:'gbz '+x.nodes[1].found['lemma']+' SBZ4')
	patterns.append(gbzdsbz4)
	names.append('gbzdsbz4')
	#GBZ %s sbz5	([msd=G.*]([deprel=(dve|tri|štiri)&msd=Dm]([deprel=dol&msd=S...m])))
	gbzdsbz5=Tree()
	gbzdsbz5.add_node(0,gbzdsbz5,lambda x:x.data['msd'].startswith('G'),relation=lambda x:'GBZ '+x.nodes[1].found['lemma']+' sbz5')
	gbzdsbz5.add_node(1,0,lambda x:x.data['deprel'] in ('dve','tri','stiri') and x.data['msd'].startswith('Dm'))
	gbzdsbz5.add_node(2,1,lambda x:x.data['deprel']=='dol' and re.match(r'S...m',x.data['msd'])!=None,relation=lambda x:'gbz '+x.nodes[1].found['lemma']+' SBZ5')
	patterns.append(gbzdsbz5)
	names.append('gbzdsbz5')
	#GBZ %s sbz6	([msd=G.*]([deprel=(dve|tri|štiri)&msd=Do]([deprel=dol&msd=S...o])))
	gbzdsbz6=Tree()
	gbzdsbz6.add_node(0,gbzdsbz6,lambda x:x.data['msd'].startswith('G'),relation=lambda x:'GBZ '+x.nodes[1].found['lemma']+' sbz6')
	gbzdsbz6.add_node(1,0,lambda x:x.data['deprel'] in ('dve','tri','stiri') and x.data['msd'].startswith('Do'))
	gbzdsbz6.add_node(2,1,lambda x:x.data['deprel']=='dol' and re.match(r'S...o',x.data['msd'])!=None,relation=lambda x:'gbz '+x.nodes[1].found['lemma']+' SBZ6')
	patterns.append(gbzdsbz6)
	names.append('gbzdsbz6')
	#GBZ in/ali GBZ	([msd=G.*]([deprel=prir&msd=G.*]([deprel=vez&lemma=(in|ali)]))
	gbziagbz=Tree()
	gbziagbz.add_node(0,gbziagbz,lambda x:x.data['msd'].startswith('G'),relation=lambda x:'GBZ in/ali GBZ')
	gbziagbz.add_node(1,0,lambda x:x.data['deprel']=='prir' and x.data['msd'].startswith('G'),relation=lambda x:'GBZ in/ali GBZ')
	gbziagbz.add_node(2,1,lambda x:x.data['deprel']=='vez' and x.data['lemma'] in ('in','ali'))
	patterns.append(gbziagbz)
	names.append('gbziagbz')
	#gbz Inf-GBZ	([msd=Gg.*]!([deprel=del&([(msd=Gp.....d)|lemma=ne)])])([deprel=dol&msd=G..n.*]))
	# KAJA ovo, kako sam shvatio, ne daje mečeve
	# RE: Core je ([msd=Gg.*]([deprel=dol&msd=G..n.*])), ampak brez nikalnic za child: !([deprel=del&([(msd=Gp.....d)|(lemma=ne)])]); cf. neg-gbz inf-gbz
	# KAJA ni core ne daje mečeve na prvih 100k rečenica iz KRESa
	gbzinfgbz=Tree()
	gbzinfgbz.add_node(0,gbzinfgbz,lambda x:x.data['MSD'].startswith('Gg') and not has.child(lambda x:x.data['deprel']=='del' and (re.match(r'Gp.....d',x.data['msd'])!=None or x.data['lemma']=='ne')),relation=lambda x:'GBZ Inf-gbz')
	gbzinfgbz.add_node(1,0,lambda x:x.data['deprel']=='dol' and re.match(r'G..n',x.data['msd'])!=None,relation=lambda x:'gbz Inf-GBZ')
	patterns.append(gbzinfgbz)
	names.append('gbzinfgbz')
	#gbz Inf-gbz SBZ4	([msd=Gg.*]([deprel=dol&msd=G..n.*]([deprel=dve&msd=S...t.*])))
	gbzinfgbzsbz4=Tree()
	gbzinfgbzsbz4.add_node(0,gbzinfgbzsbz4,lambda x:x.data['msd'].startswith('Gg'),relation='print')
	gbzinfgbzsbz4.add_node(1,0,lambda x:x.data['deprel']=='dol' and re.match(r'G..n',x.data['msd'])!=None,relation='print')
	gbzinfgbzsbz4.add_node(2,1,lambda x:x.data['deprel']=='dve' and re.match(r'S...t',x.data['msd'])!=None,relation=lambda x:'gbz Inf-gbz SBZ4')
	patterns.append(gbzinfgbzsbz4)
	names.append('gbzinfgbzsbz4')
	#GBZ kot sbz0	([msd=G.*]([deprel=tri&msd=S.*]([deprel=vez&lemma=kot])))
	gbzksbz0=Tree()
	gbzksbz0.add_node(0,gbzksbz0,lambda x:x.data['msd'].startswith('G'),relation=lambda x:'GBZ kot sbz0')
	gbzksbz0.add_node(1,0,lambda x:x.data['deprel']=='tri' and x.data['msd'].startswith('S'),relation='print')
	gbzksbz0.add_node(2,1,lambda x:x.data['deprel']=='vez' and x.data['lemma']=='kot')
	patterns.append(gbzksbz0)
	names.append('gbzksbz0')
	#gbz Nam-GBZ	([msd=Gg.*]([deprel=dol&msd=G..m.*]))
	gbzngbz=Tree()
	gbzngbz.add_node(0,gbzngbz,lambda x:x.data['msd'].startswith('Gg'),relation='print')
	gbzngbz.add_node(1,0,lambda x:x.data['deprel']=='dol' and re.match(r'G..m',x.data['msd'])!=None,relation=lambda x:'gbz Nam-GBZ')
	patterns.append(gbzngbz)
	names.append('gbzngbz')
	#GBZ Odv	([msd=G.*]([deprel=(dol|ena|dve|tri|štiri)&msd=G.*]([deprel=vez&msd=([VLR]|Z[vzn]).*])))
	gbzodv=Tree()
	gbzodv.add_node(0,gbzodv,lambda x:x.data['msd'].startswith('G'))
	gbzodv.add_node(1,0,lambda x:x.data['deprel'] in ('dol','ena','dve','tri','stiri') and x.data['msd'].startswith('G'),relation=lambda x:'GBZ Odv')
	gbzodv.add_node(2,1,lambda x:x.data['deprel']=='vez' and re.match(r'[VLR]|Z[vzn]',x.data['msd'])!=None,relation='print')
	patterns.append(gbzodv)
	names.append('gbzodv')
	#GBZ pbz1	([msd=Gg.*]([deprel=dol&msd=P....i.*]))
	gbzpbz1=Tree()
	gbzpbz1.add_node(0,gbzpbz1,lambda x:x.data['msd'].startswith('Gg'),relation=lambda x:'GBZ pbz1')
	gbzpbz1.add_node(1,0,lambda x:x.data['deprel']=='dol' and re.match(r'P....i',x.data['msd'])!=None,relation=lambda x:'gbz PBZ1')
	patterns.append(gbzpbz1)
	names.append('gbzpbz1')
	#GBZ rbz	([msd=G.*]([deprel=(tri|štiri)&msd=R.*]))
	gbzrbz=Tree()
	gbzrbz.add_node(0,gbzrbz,lambda x:x.data['msd'].startswith('G'),relation=lambda x:'GBZ rbz')
	gbzrbz.add_node(1,0,lambda x:x.data['deprel'] in ('tri','stiri') and x.data['msd'].startswith('R'),relation=lambda x:'gbz RBZ')
	patterns.append(gbzrbz)
	names.append('gbzrbz')
	#gbz SBZ1	(([msd=G.*&lemma=(postati|postajati|ostati|ostajati|izpasti)]|[msd=G.*&lemma=(zdeti|počutiti|delati)([deprel=del&msd=Z.*]))([deprel=dve&msd=S...i]))
	gbzsbz1=Tree()
	gbzsbz1.add_node(0,gbzsbz1,lambda x:(x.data['msd'].startswith('G') and x.data['lemma'] in ('postati','postajati','ostati','ostajati','izpasti')) or (x.data['msd'].startswith('G') and x.data['lemma'] in ('zdeti','počutiti','delati') and x.has_child(lambda x:x.data['deprel']=='del' and x.data['msd'].startswith('Z'))),relation='print')
	gbzsbz1.add_node(1,0,lambda x:x.data['deprel']=='dve' and re.match(r'S...i',x.data['msd'])!=None,relation=lambda x:'gbz SBZ1')
	patterns.append(gbzsbz1)
	names.append('gbzsbz1')
	#GBZ sbz2	([msd=Gg.*]([deprel=dve&msd=S...r]))
	gbzsbz2=Tree()
	gbzsbz2.add_node(0,gbzsbz2,lambda x:x.data['msd'].startswith('Gg'),relation=lambda x:'GBZ sbz2')
	gbzsbz2.add_node(1,0,lambda x:x.data['deprel']=='dve' and re.match(r'S...r',x.data['msd'])!=None,relation=lambda x:'gbz SBZ2')
	patterns.append(gbzsbz2)
	names.append('gbzsbz2')
	#GBZ sbz3	([msd=Gg.*]([deprel=dve&msd=S...d]))
	gbzsbz3=Tree()
	gbzsbz3.add_node(0,gbzsbz3,lambda x:x.data['msd'].startswith('Gg'),relation=lambda x:'GBZ sbz3')
	gbzsbz3.add_node(1,0,lambda x:x.data['deprel']=='dve' and re.match(r'S...d',x.data['msd'])!=None,relation=lambda x:'gbz SBZ3')
	patterns.append(gbzsbz3)
	names.append('gbzsbz3')
	#GBZ sbz4	([msd=Gg.*]([deprel=dve&msd=S...t.*]))
	gbzsbz4=Tree()
	gbzsbz4.add_node(0,gbzsbz4,lambda x:x.data['msd'].startswith('Gg'),relation=lambda x:'GBZ sbz4')
	gbzsbz4.add_node(1,0,lambda x:x.data['deprel']=='dve' and re.match(r'S...t',x.data['msd'])!=None,relation=lambda x:'gbz SBZ4')
	patterns.append(gbzsbz4)
	names.append('gbzsbz4')
	#Mod-rbz GBZ	([msd=G.*]([deprel=del&lemma=lahko]))
	mrbzgbz=Tree()
	mrbzgbz.add_node(0,mrbzgbz,lambda x:x.data['msd'].startswith('G'),relation=lambda x:'Mod-rbz GBZ')
	mrbzgbz.add_node(1,0,lambda x:x.data['deprel']=='del' and x.data['lemma']=='lahko',relation='print')
	patterns.append(mrbzgbz)
	names.append('mrbzgbz')
	#pbz0 %s SBZ2	([msd=P.*]([deprel=(dol|dve|tri|štiri)&msd=Dr]([deprel=dol&msd=S...r])))
	pbz0dsbz2=Tree()
	pbz0dsbz2.add_node(0,pbz0dsbz2,lambda x:x.data['msd'].startswith('P'),relation=lambda x:'PBZ0 '+x.nodes[1].found['lemma']+' sbz2')
	pbz0dsbz2.add_node(1,0,lambda x:x.data['deprel'] in ('dol','dve','tri','stiri') and x.data['msd'].startswith('Dr'))
	pbz0dsbz2.add_node(2,1,lambda x:x.data['deprel']=='dol' and re.match(r'S...r',x.data['msd'])!=None,relation=lambda x:'pbz0 '+x.nodes[1].found['lemma']+' SBZ2')
	patterns.append(pbz0dsbz2)
	names.append('pbz0dsbz2')
	#pbz0 %s SBZ3	([msd=P.*]([deprel=(dol|dve|tri|štiri)&msd=Dd]([deprel=dol&msd=S...d])))
	pbz0dsbz3=Tree()
	pbz0dsbz3.add_node(0,pbz0dsbz3,lambda x:x.data['msd'].startswith('P'),relation=lambda x:'PBZ0 '+x.nodes[1].found['lemma']+' sbz3')
	pbz0dsbz3.add_node(1,0,lambda x:x.data['deprel'] in ('dol','dve','tri','stiri') and x.data['msd'].startswith('Dd'))
	pbz0dsbz3.add_node(2,1,lambda x:x.data['deprel']=='dol' and re.match(r'S...d',x.data['msd'])!=None,relation=lambda x:'pbz0 '+x.nodes[1].found['lemma']+' SBZ3')
	patterns.append(pbz0dsbz3)
	names.append('pbz0dsbz3')
	#pbz0 %s SBZ4	([msd=P.*]([deprel=(dol|dve|tri|štiri)&msd=Dt]([deprel=dol&msd=S...t.*])))
	pbz0dsbz4=Tree()
	pbz0dsbz4.add_node(0,pbz0dsbz4,lambda x:x.data['msd'].startswith('P'),relation=lambda x:'PBZ0 '+x.nodes[1].found['lemma']+' sbz4')
	pbz0dsbz4.add_node(1,0,lambda x:x.data['deprel'] in ('dol','dve','tri','stiri') and x.data['msd'].startswith('Dt'))
	pbz0dsbz4.add_node(2,1,lambda x:x.data['deprel']=='dol' and re.match(r'S...t',x.data['msd'])!=None,relation=lambda x:'pbz0 '+x.nodes[1].found['lemma']+' SBZ4')
	patterns.append(pbz0dsbz4)
	names.append('pbz0dsbz4')
	#pbz0 %s SBZ5	([msd=P.*]([deprel=(dol|dve|tri|štiri)&msd=Dm]([deprel=dol&msd=S...m])))
	pbz0dsbz5=Tree()
	pbz0dsbz5.add_node(0,pbz0dsbz5,lambda x:x.data['msd'].startswith('P'),relation=lambda x:'PBZ0 '+x.nodes[1].found['lemma']+' sbz5')
	pbz0dsbz5.add_node(1,0,lambda x:x.data['deprel'] in ('dol','dve','tri','stiri') and x.data['msd'].startswith('Dm'))
	pbz0dsbz5.add_node(2,1,lambda x:x.data['deprel']=='dol' and re.match(r'S...m',x.data['msd'])!=None,relation=lambda x:'pbz0 '+x.nodes[1].found['lemma']+' SBZ5')
	patterns.append(pbz0dsbz5)
	names.append('pbz0dsbz5')
	#pbz0 %s SBZ6	([msd=P.*]([deprel=(dol|dve|tri|štiri)&msd=Do]([deprel=dol&msd=S...o])))
	pbz0dsbz6=Tree()
	pbz0dsbz6.add_node(0,pbz0dsbz6,lambda x:x.data['msd'].startswith('P'),relation=lambda x:'PBZ0 '+x.nodes[1].found['lemma']+' sbz6')
	pbz0dsbz6.add_node(1,0,lambda x:x.data['deprel'] in ('dol','dve','tri','stiri') and x.data['msd'].startswith('Do'))
	pbz0dsbz6.add_node(2,1,lambda x:x.data['deprel']=='dol' and re.match(r'S...o',x.data['msd'])!=None,relation=lambda x:'pbz0 '+x.nodes[1].found['lemma']+' SBZ6')
	patterns.append(pbz0dsbz6)
	names.append('pbz0dsbz6')
	#PBZ0 in/ali pbz0	([msd=P.*]([deprel=prir&msd=P.*]([deprel=vez&lemma=(in|ali)]))
	pbz0iapbz0=Tree()
	pbz0iapbz0.add_node(0,pbz0iapbz0,lambda x:x.data['msd'].startswith('P'),relation=lambda x:'PBZ0 in/ali PBZ0')
	pbz0iapbz0.add_node(1,0,lambda x:x.data['deprel']=='prir' and x.data['msd'].startswith('P'),relation=lambda x:'PBZ0 in/ali PBZ0')
	pbz0iapbz0.add_node(2,1,lambda x:x.data['deprel']=='vez' and x.data['lemma'] in ('in','ali'))
	patterns.append(pbz0iapbz0)
	names.append('pbz0iapbz0')
	#PBZ0 Inf-gbz	([msd=P.*]([deprel=dve&msd=G..n.*]))
	pbz0infgbz=Tree()
	pbz0infgbz.add_node(0,pbz0infgbz,lambda x:x.data['msd'].startswith('P'),relation=lambda x:'PBZ0 Inf-gbz')
	pbz0infgbz.add_node(1,0,lambda x:x.data['deprel']=='dve' and re.match(r'G..n',x.data['msd'])!=None,relation='print')
	patterns.append(pbz0infgbz)
	names.append('pbz0infgbz')
	#PBZ0 kot sbz0	([msd=P.*]([deprel=tri&msd=S.*]([deprel=vez&lemma=kot])))
	pbz0ksbz0=Tree()
	pbz0ksbz0.add_node(0,pbz0ksbz0,lambda x:x.data['msd'].startswith('P'),relation=lambda x:'PBZ0 kot sbz0')
	pbz0ksbz0.add_node(1,0,lambda x:x.data['deprel']=='tri' and x.data['msd'].startswith('S'),relation='print')
	pbz0ksbz0.add_node(2,1,lambda x:x.data['deprel']=='vez' and x.data['lemma']=='kot')
	patterns.append(pbz0ksbz0)
	names.append('pbz0ksbz0')
	#PBZ0 rbz	(([msd=P.*]([deprel=(dol|tri)&msd=R.*]))|(([msd=Gp.*]([deprel=dol&msd=P.*])([deprel=(tri|štiri)&msd=R.*])))
	pbz0rbz1=Tree()
	pbz0rbz1.add_node(0,pbz0rbz1,lambda x:x.data['msd'].startswith('P'),relation=lambda x:'PBZ0 rbz')
	pbz0rbz1.add_node(1,0,lambda x:x.data['deprel'] in ('dol','tri') and x.data['msd'].startswith('R'),relation=lambda x:'pbz0 RBZ')
	pbz0rbz2=Tree()
	pbz0rbz2.add_node(0,pbz0rbz2,lambda x:x.data['msd'].startswith('Gp'))
	pbz0rbz2.add_node(1,0,lambda x:x.data['deprel']=='dol' and x.data['msd'].startswith('P'),relation=lambda x:'PBZ0 rbz')
	pbz0rbz2.add_node(2,0,lambda x:x.data['deprel'] in ('tri','stiri') and x.data['msd'].startswith('R'),relation=lambda x:'pbz0 RBZ')
	patterns.append(pbz0rbz1)
	names.append('pbz0rbz1')
	patterns.append(pbz0rbz2)
	names.append('pbz0rbz2')
	#pbz0 SBZ0	([msd=S.*]([deprel=dol&msd=P.*]!([deprel=vez])))
	pbz0sbz0=Tree()
	pbz0sbz0.add_node(0,pbz0sbz0,lambda x:x.data['msd'].startswith('S'),relation=lambda x:'pbz0 SBZ0')
	pbz0sbz0.add_node(1,0,lambda x:x.data['deprel']=='dol' and x.data['msd'].startswith('P') and not x.has_child(lambda x:x.data['deprel']=='vez'),relation=lambda x:'PBZ0 sbz0')
	patterns.append(pbz0sbz0)
	names.append('pbz0sbz0')
	#pbz0 SBZ2	([msd=Gp.*]([deprel=dol&msd=P.*]([deprel=dve&msd=S...r])))
	pbz0sbz2=Tree()
	pbz0sbz2.add_node(0,pbz0sbz2,lambda x:x.data['msd'].startswith('Gp'))
	pbz0sbz2.add_node(1,0,lambda x:x.data['deprel']=='dol' and x.data['msd'].startswith('P'),relation=lambda x:'PBZ0 sbz2')
	pbz0sbz2.add_node(2,1,lambda x:x.data['deprel']=='dve' and re.match(r'S...r',x.data['msd'])!=None,relation=lambda x:'pbz0 SBZ2')
	patterns.append(pbz0sbz2)
	names.append('pbz0sbz2')
	#pbz0 SBZ3	([msd=Gp.*]([deprel=dol&msd=P.*]([deprel=dve&msd=S...d])))
	pbz0sbz3=Tree()
	pbz0sbz3.add_node(0,pbz0sbz3,lambda x:x.data['msd'].startswith('Gp'))
	pbz0sbz3.add_node(1,0,lambda x:x.data['deprel']=='dol' and x.data['msd'].startswith('P'),relation=lambda x:'PBZ0 sbz3')
	pbz0sbz3.add_node(2,1,lambda x:x.data['deprel']=='dve' and re.match(r'S...d',x.data['msd'])!=None,relation=lambda x:'pbz0 SBZ3')
	patterns.append(pbz0sbz3)
	names.append('pbz0sbz3')
	#pbz1 Neg-Vez-gbz Inf-GBZ	((([msd=Gp.*]([deprel=del&([(msd=Gp.....d)|lemma=ne)])]))|([msd=Gp.....d]))([deprel=ena&msd=G..n.*])(([deprel=dol&msd=[PR].*])|([deprel=tri&msd=R.*])))
	#pbz1 Vez-gbz Inf-GBZ	((([msd=Gp.*]!([deprel=del&([(msd=Gp.....d)|lemma=ne)])]))|([msd=Gp.*&msd!=Gp.....d]))([deprel=ena&msd=G..n.*])(([deprel=dol&msd=[PR].*])|([deprel=tri&msd=R.*])))
	#pbz1{-}PBZ0	(([msd=[PR].*]([deprel=prir&msd=[PR].*]([deprel=vez&word=-])))|([msd=[PR].*]([deprel=dol&msd=[PR].*])([deprel=vez&word=-])))
	#pbz2 SBZ2	([msd=Gp.*&msd!=Gp.....d]([deprel=(ena|dol)&msd=S...r]([deprel=dol&msd=P....r.*])))
	pbz2sbz2=Tree()
	pbz2sbz2.add_node(0,pbz2sbz2,lambda x:x.data['msd'].startswith('Gp') and re.match(r'Gp.....d',x.data['msd'])==None)
	pbz2sbz2.add_node(1,0,lambda x:x.data['deprel'] in ('ena','dol') and re.match(r'S...r',x.data['msd'])!=None,relation=lambda x:'pbz2 SBZ2')
	pbz2sbz2.add_node(2,1,lambda x:x.data['deprel']=='dol' and re.match(r'P....r',x.data['msd'])!=None,relation=lambda x:'PBZ2 sbz2')
	patterns.append(pbz2sbz2)
	names.append('pbz2sbz2')
	#RBZ %s sbz2	([deprel=dol&msd=Dr]([deprel=dol&msd=S...r])([deprel=dol&msd=R.*]))|([deprel=dol&msd=Dr]([deprel=dol&msd=R.*])([deprel=dol&msd=S...r]))|([msd=Gp.*]([deprel=(tri|štiri)&msd=R.*])([deprel=(dve|tri|štiri)&msd=Dr]([deprel=dol&msd=S...r])))
	#RBZ %s sbz3	([deprel=dol&msd=Dd]([deprel=dol&msd=S...d])([deprel=dol&msd=R.*]))
	# KAJA za ovako napisano pravilo nema hitova, umjesto (()()) napisao sam ((()))
	# Re: Tole je čisti bug, manjka del relacij za RBZ %s sbz[2-6]. V bistvu gre za disjunkcijo treh stebel na prvem nivoju --->
	# Re: NOVA RBZ %s sbz2 (([msd=Dr]([deprel=dol&msd=S...r]([deprel=dol&msd=R.*])))|([msd=R.*]([deprel=dol&msd=Dr]([deprel=dol&msd=S...r])))|([msd=Gp.*]([deprel=(tri|štiri)&msd=R.*])([deprel=(dve|tri|štiri)&msd=Dr]([deprel=dol&msd=S…r]))))
	# Re: NOVA RBZ %s sbz3 (([msd=Dd]([deprel=dol&msd=S…d]([deprel=dol&msd=R.*])))|([msd=R.*]([deprel=dol&msd=Dd]([deprel=dol&msd=S…d])))|([msd=Gp.*]([deprel=(tri|štiri)&msd=R.*])([deprel=(dve|tri|štiri)&msd=Dd]([deprel=dol&msd=S…d]))))
	# Re: NOVA RBZ %s sbz4 (([msd=Dt]([deprel=dol&msd=S…t.*]([deprel=dol&msd=R.*])))|([msd=R.*]([deprel=dol&msd=Dt]([deprel=dol&msd=S…t.*])))|([msd=Gp.*]([deprel=(tri|štiri)&msd=R.*])([deprel=(dve|tri|štiri)&msd=Dt]([deprel=dol&msd=S…t.*]))))
	# Re: NOVA RBZ %s sbz5 (([msd=Dm]([deprel=dol&msd=S…m]([deprel=dol&msd=R.*])))|([msd=R.*]([deprel=dol&msd=Dm]([deprel=dol&msd=S…m])))|([msd=Gp.*]([deprel=(tri|štiri)&msd=R.*])([deprel=(dve|tri|štiri)&msd=Dm]([deprel=dol&msd=S…m]))))
	# Re: NOVA RBZ %s sbz6 (([msd=Do]([deprel=dol&msd=S…o]([deprel=dol&msd=R.*])))|([msd=R.*]([deprel=dol&msd=Do]([deprel=dol&msd=S…o])))|([msd=Gp.*]([deprel=(tri|štiri)&msd=R.*])([deprel=(dve|tri|štiri)&msd=Do]([deprel=dol&msd=S…o]))))
	#(([msd=Dr]([deprel=dol&msd=S...r]([deprel=dol&msd=R.*])))
	# KAJA 1 hit na prvih 100k rečenica
	rbzdsbz21=Tree()
	rbzdsbz21.add_node(0,rbzdsbz21,lambda x: x.data['msd']=='Dd')
	rbzdsbz21.add_node(1,0,lambda x:x.data['deprel']=='dol' and re.match(r'S...r',x.data['msd'])!=None,relation=lambda x:'rbz '+x.nodes[0].found['lemma']+' SBZ2')
	rbzdsbz21.add_node(2,1,lambda x:x.data['deprel']=='dol' and x.data['msd'].startswith('R'),relation=lambda x:'RBZ '+x.nodes[0].found['lemma']+' sbz2')
	#([msd=R.*]([deprel=dol&msd=Dr]([deprel=dol&msd=S…r])))
	# KAJA 45 hitova na prvih 100k rečenica
	rbzdsbz22=Tree()
	rbzdsbz22.add_node(0,rbzdsbz22,lambda x:x.data['msd'].startswith('R'),relation=lambda x:'RBZ '+x.nodes[1].found['lemma']+' sbz2')
	rbzdsbz22.add_node(1,0,lambda x:x.data['deprel']=='dol' and x.data['msd'].startswith('Dr'))
	rbzdsbz22.add_node(2,1,lambda x:x.data['deprel']=='dol' and re.match(r'S...r',x.data['msd'])!=None,relation=lambda x:'rbz '+x.nodes[1].found['lemma']+' SBZ2')
	#([msd=Gp.*]([deprel=(tri|štiri)&msd=R.*])([deprel=(dve|tri|štiri)&msd=Dr]([deprel=dol&msd=S…r])))
	# KAJA 88 hitova na prvih 100k rečenica
	rbzdsbz23=Tree()
	rbzdsbz23.add_node(0,rbzdsbz23,lambda x:x.data['msd'].startswith('Gp'))
	rbzdsbz23.add_node(1,0,lambda x:x.data['deprel'] in ('tri','stiri') and x.data['msd'].startswith('R'),relation=lambda x:'RBZ '+x.nodes[2].found['lemma']+' sbz2')
	rbzdsbz23.add_node(2,0,lambda x:x.data['deprel'] in ('dve','tri','stiri') and x.data['msd'].startswith('Dr'))
	rbzdsbz23.add_node(3,2,lambda x:x.data['deprel']=='dol' and re.match(r'S...r',x.data['msd'])!=None,relation=lambda x:'rbz '+x.nodes[2].found['lemma']+' SBZ2')
	patterns.append(rbzdsbz21)
	names.append('rbzdsbz21')
	patterns.append(rbzdsbz22)
	names.append('rbzdsbz22')
	patterns.append(rbzdsbz23)
	names.append('rbzdsbz23')
	rbzdsbz3=Tree()
	rbzdsbz3.add_node(0,rbzdsbz3,lambda x:x.data['deprel']=='dol' and x.data['msd']=='Dd')
	rbzdsbz3.add_node(1,0,lambda x:x.data['deprel']=='dol' and re.match(r'S...d',x.data['msd'])!=None,relation=lambda x:'rbz '+x.nodes[0].found['lemma']+' SBZ3')
	rbzdsbz3.add_node(2,1,lambda x:x.data['deprel']=='dol' and x.data['msd'].startswith('R'),relation=lambda x:'RBZ '+x.nodes[0].found['lemma']+' sbz3')
	patterns.append(rbzdsbz3)
	names.append('rbzdsbz3')
	#RBZ %s sbz4	([deprel=dol&msd=Dt]([deprel=dol&msd=S...t.*])([deprel=dol&msd=R.*]))
	# KAJA isto kao i prethodno
	rbzdsbz4=Tree()
	rbzdsbz4.add_node(0,rbzdsbz4,lambda x:x.data['deprel']=='dol' and x.data['msd']=='Dt')
	rbzdsbz4.add_node(1,0,lambda x:x.data['deprel']=='dol' and re.match(r'S...t',x.data['msd'])!=None,relation=lambda x:'rbz '+x.nodes[0].found['lemma']+' SBZ4')
	rbzdsbz4.add_node(2,1,lambda x:x.data['deprel']=='dol' and x.data['msd'].startswith('R'),relation=lambda x:'RBZ '+x.nodes[0].found['lemma']+' sbz4')
	patterns.append(rbzdsbz4)
	names.append('rbzdsbz4')
	#RBZ %s sbz5	([deprel=dol&msd=Dm]([msd=S...m])([deprel=dol&msd=R.*]))
	# KAJA isto kao i prethodno
	rbzdsbz5=Tree()
	rbzdsbz5.add_node(0,rbzdsbz5,lambda x:x.data['deprel']=='dol' and x.data['msd']=='Dm')
	rbzdsbz5.add_node(1,0,lambda x:re.match(r'S...m',x.data['msd'])!=None,relation=lambda x:'rbz '+x.nodes[0].found['lemma']+' SBZ5')
	rbzdsbz5.add_node(2,1,lambda x:x.data['deprel']=='dol' and x.data['msd'].startswith('R'),relation=lambda x:'RBZ '+x.nodes[0].found['lemma']+' sbz5')
	patterns.append(rbzdsbz5)
	names.append('rbzdsbz5')
	#RBZ %s sbz6	([deprel=dol&msd=Do]([msd=S...o])([deprel=dol&msd=R.*]))
	# KAJA isto kao i prethodno
	rbzdsbz6=Tree()
	rbzdsbz6.add_node(0,rbzdsbz6,lambda x:x.data['deprel']=='dol' and x.data['msd']=='Do')
	rbzdsbz6.add_node(1,0,lambda x:re.match(r'S...o',x.data['msd'])!=None,relation=lambda x:'rbz '+x.nodes[0].found['lemma']+' SBZ6')
	rbzdsbz6.add_node(2,1,lambda x:x.data['deprel']=='dol' and x.data['msd'].startswith('R'),relation=lambda x:'RBZ '+x.nodes[0].found['lemma']+' sbz6')
	patterns.append(rbzdsbz6)
	names.append('rbzdsbz6')
	#rbz GBZ	([msd=G.*]([deprel=(tri|štiri)&msd=R.*]))
	# IDENTIČAN gbzrbz
	rbzgbz=Tree()
	rbzgbz.add_node(0,rbzgbz,lambda x:x.data['msd'].startswith('G'),relation=lambda x:'rbz GBZ')
	rbzgbz.add_node(1,0,lambda x:x.data['deprel'] in ('tri','stiri') and x.data['msd'].startswith('R'),relation=lambda x:'RBZ gbz')
	patterns.append(rbzgbz)
	names.append('rbzgbz')
	#RBZ in/ali RBZ	([msd=R.*]([deprel=prir&msd=R.*]([deprel=vez&lemma=(in|ali)])))
	rbziarbz=Tree()
	rbziarbz.add_node(0,rbziarbz,lambda x:x.data['msd'].startswith('R'),relation=lambda x:'RBZ in/ali RBZ')
	rbziarbz.add_node(1,0,lambda x:x.data['deprel']=='prir' and x.data['msd'].startswith('R'),relation=lambda x:'RBZ in/ali RBZ')
	rbziarbz.add_node(2,1,lambda x:x.data['deprel']=='vez' and x.data['lemma'] in ('in','ali'))
	patterns.append(rbziarbz)
	names.append('rbziarbz')
	#RBZ Inf-gbz	([msd=G..n.*]([deprel=(tri|štiri)&msd=R.*]))
	rbzinfgbz=Tree()
	rbzinfgbz.add_node(0,rbzinfgbz,lambda x:re.match(r'G..n',x.data['msd'])!=None,relation=lambda x:'rbz Inf-GBZ')
	rbzinfgbz.add_node(1,0,lambda x:x.data['deprel'] in ('tri','stiri') and x.data['msd'].startswith('R'),relation=lambda x:'RBZ Inf-gbz')
	patterns.append(rbzinfgbz)
	names.append('rbzinfgbz')
	#RBZ kot sbz0	([msd=R.*]([deprel=tri&msd=S.*]([deprel=vez&lemma=kot])))
	rbzksbz0=Tree()
	rbzksbz0.add_node(0,rbzksbz0,lambda x:x.data['msd'].startswith('R'),relation=lambda x:'RBZ kot sbz0')
	rbzksbz0.add_node(1,0,lambda x:x.data['deprel']=='tri' and x.data['msd'].startswith('S'),relation='print')
	rbzksbz0.add_node(2,1,lambda x:x.data['deprel']=='vez' and x.data['lemma']=='kot')
	patterns.append(rbzksbz0)
	names.append('rbzksbz0')
	#rbz Neg-Vez-gbz Inf-GBZ	((([msd=Gp.*]([deprel=del&([(msd=Gp.....d)|lemma=ne)])]))|([msd=Gp.....d]))([deprel=ena&msd=G..n.*])(([deprel=dol&msd=[PR].*])|([deprel=tri&msd=R.*])))
	#rbz PBZ0	([msd=P.*]([deprel=(dol|tri)&msd=R.*]))|(([msd=Gp.*]([deprel=dol&msd=P.*])([deprel=(tri|štiri)&msd=R.*]))
	# IDENTIČAN pbz0rbz
	rbzpbz01=Tree()
	rbzpbz01.add_node(0,rbzpbz01,lambda x:x.data['msd'].startswith('P'),relation=lambda x:'rbz PBZ0')
	rbzpbz01.add_node(1,0,lambda x:x.data['deprel'] in ('dol','tri') and x.data['msd'].startswith('R'),relation=lambda x:'RBZ pbz0')
	rbzpbz02=Tree()
	rbzpbz02.add_node(0,rbzpbz02,lambda x:x.data['msd'].startswith('Gp'))
	rbzpbz02.add_node(1,0,lambda x:x.data['deprel']=='dol' and x.data['msd'].startswith('P'),relation=lambda x:'rbz PBZ0')
	rbzpbz02.add_node(2,0,lambda x:x.data['deprel'] in ('tri','stiri') and x.data['msd'].startswith('R'),relation=lambda x:'RBZ pbz0')
	patterns.append(rbzpbz01)
	names.append('rbzpbz01')
	patterns.append(rbzpbz02)
	names.append('rbzpbz02')
	#rbz RBZ	([msd=R.*]([deprel=dol&msd=R.*]))
	rbzrbz=Tree()
	rbzrbz.add_node(0,rbzrbz,lambda x:x.data['msd'].startswith('R'),relation=lambda x:'RBZ RBZ')
	rbzrbz.add_node(1,0,lambda x:x.data['deprel']=='dol' and x.data['msd'].startswith('R'),relation=lambda x:'RBZ RBZ')
	patterns.append(rbzrbz)
	names.append('rbzrbz')
	#rbz SBZ2	([msd=S...r]([deprel=dol&msd=R.*]))
	rbzsbz2=Tree()
	rbzsbz2.add_node(0,rbzsbz2,lambda x:re.match(r'S...r',x.data['msd'])!=None,relation=lambda x:'rbz SBZ2')
	rbzsbz2.add_node(1,0,lambda x:x.data['deprel']=='dol' and x.data['msd'].startswith('R'),relation=lambda x:'RBZ sbz2')
	patterns.append(rbzsbz2)
	names.append('rbzsbz2')
	#rbz Vez-gbz Inf-GBZ	((([msd=Gp.*]!([deprel=del&([(msd=Gp.....d)|lemma=ne)])]))|([msd=Gp.*&msd!=Gp.....d]))([deprel=ena&msd=G..n.*])(([deprel=dol&msd=[PR].*])|([deprel=tri&msd=R.*])))
	#RBZ Vez-gbz pbz1	([msd=Gp.*]([deprel=(tri|štiri)&msd=R.*])([deprel=dol&msd=(P....i.*|R.*)]))
	#KAJA nije li ovo jako slično rbzpbz1?
	rbzvezgbzpbz1=Tree()
	rbzvezgbzpbz1.add_node(0,rbzvezgbzpbz1,lambda x:x.data['msd'].startswith('Gp'))
	rbzvezgbzpbz1.add_node(1,0,lambda x:x.data['deprel'] in ('tri','stiri') and x.data['msd'].startswith('R'),relation=lambda x:'RBZ Vez-gbz pbz1')
	rbzvezgbzpbz1.add_node(2,0,lambda x:x.data['deprel']=='dol' and re.match(r'P....i|R',x.data['msd'])!=None,relation=lambda x:'rbz Vez-gbz PBZ1')
	patterns.append(rbzvezgbzpbz1)
	names.append('rbzvezgbzpbz1')
	#rbz1{-}RBZ0	(([msd=[PR].*]([deprel=prir&msd=[PR].*]([deprel=vez&word=-])))|([msd=[PR].*]([deprel=dol&msd=[PR].*])([deprel=vez&word=-])))
	#s prislovom	([msd=G.*]([deprel=(dve|tri|štiri)&msd=S...r]([deprel=dol&msd=R.*])))
	sprislovom=Tree()
	sprislovom.add_node(0,sprislovom,lambda x:x.data['msd'].startswith('G'))
	sprislovom.add_node(1,0,lambda x:x.data['deprel'] in ('dve','tri','stiri') and re.match(r'S...r',x.data['msd'])!=None,relation=lambda x:'s prislovom')
	sprislovom.add_node(2,1,lambda x:x.data['deprel']=='dol' and x.data['msd'].startswith('R'),relation='print')
	patterns.append(sprislovom)
	names.append('sprislovom')
	#sbz0 %s RBZ	([msd=S.*]([deprel=dol&msd=D.*]([deprel=dol&msd=R.*])))
	sbz0drbz=Tree()
	sbz0drbz.add_node(0,sbz0drbz,lambda x:x.data['msd'].startswith('S'),relation=lambda x:'SBZ0 '+x.nodes[1].found['lemma']+' rbz')
	sbz0drbz.add_node(1,0,lambda x:x.data['deprel']=='dol' and x.data['msd'].startswith('D'))
	sbz0drbz.add_node(2,1,lambda x:x.data['deprel']=='dol' and x.data['msd'].startswith('R'),relation=lambda x:'sbz0 '+x.nodes[1].found['lemma']+' RBZ')
	patterns.append(sbz0drbz)
	names.append('sbz0drbz')
	#SBZ0 %s sbz2	([msd=S.*]([deprel=dol&msd=Dr]([deprel=dol&msd=S...r])))
	sbz0dsbz2=Tree()
	sbz0dsbz2.add_node(0,sbz0dsbz2,lambda x:x.data['msd'].startswith('S'),relation=lambda x:'SBZ0 '+x.nodes[1].found['lemma']+' sbz2')
	sbz0dsbz2.add_node(1,0,lambda x:x.data['deprel']=='dol' and x.data['msd'].startswith('Dr'))
	sbz0dsbz2.add_node(2,1,lambda x:x.data['deprel']=='dol' and re.match(r'S...r',x.data['msd'])!=None,relation=lambda x:'sbz0 '+x.nodes[1].found['lemma']+' SBZ2')
	patterns.append(sbz0dsbz2)
	names.append('sbz0dsbz2')
	#SBZ0 %s sbz3	([msd=S.*]([deprel=dol&msd=Dd]([deprel=dol&msd=S...d])))
	sbz0dsbz3=Tree()
	sbz0dsbz3.add_node(0,sbz0dsbz3,lambda x:x.data['msd'].startswith('S'),relation=lambda x:'SBZ0 '+x.nodes[1].found['lemma']+' sbz3')
	sbz0dsbz3.add_node(1,0,lambda x:x.data['deprel']=='dol' and x.data['msd'].startswith('Dd'))
	sbz0dsbz3.add_node(2,1,lambda x:x.data['deprel']=='dol' and re.match(r'S...d',x.data['msd'])!=None,relation=lambda x:'sbz0 '+x.nodes[1].found['lemma']+' SBZ3')
	patterns.append(sbz0dsbz3)
	names.append('sbz0dsbz3')
	#SBZ0 %s sbz4	([msd=S.*]([deprel=dol&msd=Dt]([deprel=dol&msd=S...t.*])))
	sbz0dsbz4=Tree()
	sbz0dsbz4.add_node(0,sbz0dsbz4,lambda x:x.data['msd'].startswith('S'),relation=lambda x:'SBZ0 '+x.nodes[1].found['lemma']+' sbz4')
	sbz0dsbz4.add_node(1,0,lambda x:x.data['deprel']=='dol' and x.data['msd'].startswith('Dt'))
	sbz0dsbz4.add_node(2,1,lambda x:x.data['deprel']=='dol' and re.match(r'S...t',x.data['msd'])!=None,relation=lambda x:'sbz0 '+x.nodes[1].found['lemma']+' SBZ4')
	patterns.append(sbz0dsbz4)
	names.append('sbz0dsbz4')
	#SBZ0 %s sbz5	([msd=S.*]([deprel=dol&msd=Dm]([deprel=dol&msd=S...m])))
	sbz0dsbz5=Tree()
	sbz0dsbz5.add_node(0,sbz0dsbz5,lambda x:x.data['msd'].startswith('S'),relation=lambda x:'SBZ0 '+x.nodes[1].found['lemma']+' sbz5')
	sbz0dsbz5.add_node(1,0,lambda x:x.data['deprel']=='dol' and x.data['msd'].startswith('Dm'))
	sbz0dsbz5.add_node(2,1,lambda x:x.data['deprel']=='dol' and re.match(r'S...m',x.data['msd'])!=None,relation=lambda x:'sbz0 '+x.nodes[1].found['lemma']+' SBZ5')
	patterns.append(sbz0dsbz5)
	names.append('sbz0dsbz5')
	#SBZ0 %s sbz6	([msd=S.*]([deprel=dol&msd=Do]([deprel=dol&msd=S...o])))
	sbz0dsbz6=Tree()
	sbz0dsbz6.add_node(0,sbz0dsbz6,lambda x:x.data['msd'].startswith('S'),relation=lambda x:'SBZ0 '+x.nodes[1].found['lemma']+' sbz6')
	sbz0dsbz6.add_node(1,0,lambda x:x.data['deprel']=='dol' and x.data['msd'].startswith('Do'))
	sbz0dsbz6.add_node(2,1,lambda x:x.data['deprel']=='dol' and re.match(r'S...o',x.data['msd'])!=None,relation=lambda x:'sbz0 '+x.nodes[1].found['lemma']+' SBZ6')
	patterns.append(sbz0dsbz6)
	names.append('sbz0dsbz6')
	#SBZ0 in/ali SBZ0	([msd=S.*]([deprel=prir&msd=S.*]([deprel=vez&lemma=(in|ali)])))
	sbz0iasbz0=Tree()
	sbz0iasbz0.add_node(0,sbz0iasbz0,lambda x:x.data['msd'].startswith('S'),relation=lambda x:'SBZ0 in/ali SBZ0')
	sbz0iasbz0.add_node(1,0,lambda x:x.data['deprel']=='prir' and x.data['msd'].startswith('S'),relation=lambda x:'SBZ0 in/ali SBZ0')
	sbz0iasbz0.add_node(2,1,lambda x:x.data['deprel']=='vez' and x.data['lemma'] in ('in','ali'))
	patterns.append(sbz0iasbz0)
	names.append('sbz0iasbz0')
	#SBZ0 Inf-gbz	([msd=S.*]([deprel=dol&msd=G..n.*]))
	sbz0infgbz=Tree()
	sbz0infgbz.add_node(0,sbz0infgbz,lambda x:x.data['msd'].startswith('S'),relation=lambda x:'SBZ0 Inf-gbz')
	sbz0infgbz.add_node(1,0,lambda x:x.data['deprel']=='dol' and re.match(r'G..n',x.data['msd'])!=None,relation=lambda x:'sbz0 Inf-GBZ')
	patterns.append(sbz0infgbz)
	names.append('sbz0infgbz')
	#SBZ0 kot sbz0	([msd=S.*]([deprel=tri&msd=S.*]([deprel=vez&lemma=kot])))
	sbz0ksbz0=Tree()
	sbz0ksbz0.add_node(0,sbz0ksbz0,lambda x:x.data['msd'].startswith('S'),relation=lambda x:'SBZ0 kot SBZ0')
	sbz0ksbz0.add_node(1,0,lambda x:x.data['deprel']=='tri' and x.data['msd'].startswith('S'),relation=lambda x:'SBZ0 kot SBZ0')
	sbz0ksbz0.add_node(2,1,lambda x:x.data['deprel']=='vez' and x.data['lemma']=='kot')
	patterns.append(sbz0ksbz0)
	names.append('sbz0ksbz0')
	#SBZ0 sbz0	([msd=S...i.*](deprel=dol&msd=So..i]))
	# KAJA ne bi li se ovo pravilo trebalo zvati sbz1 sbz1?
	# Re: Se strinjam, ampak zaenkrat pustimo sledimo temu, kar je v LBS-WS, sem si pa zabeležila kot opombo, hvala!
	sbz0sbz0=Tree()
	sbz0sbz0.add_node(0,sbz0sbz0,lambda x:re.match(r'So..i',x.data['msd'])!=None,relation=lambda x:'SBZ0 sbz0')
	sbz0sbz0.add_node(1,0,lambda x:x.data['deprel']=='dol' and re.match(r'So..i',x.data['msd'])!=None,relation=lambda x:'sbz0 SBZ0')
	patterns.append(sbz0sbz0)
	names.append('sbz0sbz0')
	#sbz0 SBZ1	([msd=S.*]([deprel=dol&msd=So..i]))
	sbz0sbz1=Tree()
	sbz0sbz1.add_node(0,sbz0sbz1,lambda x:x.data['msd'].startswith('S'),relation=lambda x:'SBZ0 sbz1')
	sbz0sbz1.add_node(1,0,lambda x:x.data['deprel']=='dol' and re.match(r'So..i',x.data['msd'])!=None,relation=lambda x:'sbz0 SBZ1')
	patterns.append(sbz0sbz1)
	names.append('sbz0sbz1')
	#sbz0 SBZ2	([msd=S.*]([deprel=dol&msd=S...r]))
	sbz0sbz2=Tree()
	sbz0sbz2.add_node(0,sbz0sbz2,lambda x:x.data['msd'].startswith('S'),relation=lambda x:'SBZ0 sbz2')
	sbz0sbz2.add_node(1,0,lambda x:x.data['deprel']=='dol' and re.match(r'So..r',x.data['msd'])!=None,relation=lambda x:'sbz0 SBZ2')
	patterns.append(sbz0sbz2)
	names.append('sbz0sbz2')
	#sbz0 SBZ3	([msd=S.*]([deprel=dol&msd=S...d]))
	sbz0sbz3=Tree()
	sbz0sbz3.add_node(0,sbz0sbz3,lambda x:x.data['msd'].startswith('S'),relation=lambda x:'SBZ0 sbz3')
	sbz0sbz3.add_node(1,0,lambda x:x.data['deprel']=='dol' and re.match(r'So..d',x.data['msd'])!=None,relation=lambda x:'sbz0 SBZ3')
	patterns.append(sbz0sbz3)
	names.append('sbz0sbz3')
	#sbz1 GBZ	([msd=G.*]([deprel=ena&msd=So.*]))
	sbz1gbz=Tree()
	sbz1gbz.add_node(0,sbz1gbz,lambda x:x.data['msd'].startswith('G'),relation=lambda x:'sbz1 GBZ')
	sbz1gbz.add_node(1,0,lambda x:x.data['deprel']=='ena' and x.data['msd'].startswith('So'),relation=lambda x:'SBZ1 gbz')
	patterns.append(sbz1gbz)
	names.append('sbz1gbz')
	#sbz1 Neg-GBZ	((([msd=Gg.*]([deprel=del&([(msd=Gp.....d)|lemma=ne)])]))|([msd=Gg.....d]))([deprel=ena&msd=So.*]))
	#sbz1 Neg-Vez-gbz Inf-GBZ	((([msd=Gg.*&lemma=(imeti|dobiti|vzeti|jemati)]([deprel=del&([(msd=Gp.....d)|lemma=ne)])])|[lemma=imeti&msd=Gg.....d]))([deprel=dve&msd=S...r])([deprel=(dol|ena)&msd=G..n.*]))
	#sbz1 Vez-gbz Inf-GBZ	([msd=Gp.*]([deprel=(dol|ena)&msd=So..i])([deprel=(dol|ena)&msd=G..n.*]))
	sbz1vezgbzinfgbz=Tree()
	sbz1vezgbzinfgbz.add_node(0,sbz1vezgbzinfgbz,lambda x:x.data['msd'].startswith('Gp'))
	sbz1vezgbzinfgbz.add_node(1,0,lambda x:x.data['deprel'] in ('dol','ena') and re.match(r'So..i',x.data['msd'])!=None,relation=lambda x:'SBZ1 Vez-gbz Inf-gbz')
	sbz1vezgbzinfgbz.add_node(2,0,lambda x:x.data['deprel'] in ('dol','ena') and re.match(r'G..n',x.data['msd'])!=None,relation=lambda x:'sbz1 Vez-gbz Inf-GBZ')
	patterns.append(sbz1vezgbzinfgbz)
	names.append('sbz1vezgbzinfgbz')
	#SBZ1 Vez-gbz pbz1	([msd=Gp.*]([deprel=ena&msd=So..i])([deprel=dol&msd=P....i.*]))
	sbz1vezgbzpbz1=Tree()
	sbz1vezgbzpbz1.add_node(0,sbz1vezgbzpbz1,lambda x:x.data['msd'].startswith('Gp'))
	sbz1vezgbzpbz1.add_node(1,0,lambda x:x.data['deprel']=='ena' and re.match(r'So..i',x.data['msd'])!=None,relation=lambda x:'SBZ1 Vez-gbz pbz1')
	sbz1vezgbzpbz1.add_node(2,0,lambda x:x.data['deprel']=='dol' and re.match(r'P....i',x.data['msd'])!=None,relation=lambda x:'sbz1 Vez-gbz PBZ1')
	patterns.append(sbz1vezgbzpbz1)
	names.append('sbz1vezgbzpbz1')
	#sbz1 Vez-gbz RBZ	([msd=Gp.*]([deprel=ena&msd=S.*])([deprel=(tri|štiri)&msd=R.*]))
	sbz1vezgbzrbz=Tree()
	sbz1vezgbzrbz.add_node(0,sbz1vezgbzrbz,lambda x:x.data['msd'].startswith('Gp'))
	sbz1vezgbzrbz.add_node(1,0,lambda x:x.data['deprel']=='ena' and x.data['msd'].startswith('S'),relation=lambda x:'SBZ1 Vez-gbz rbz')
	sbz1vezgbzrbz.add_node(2,0,lambda x:x.data['deprel'] in ('tri','stiri') and x.data['msd'].startswith('R'),relation=lambda x:'sbz1 Vez-gbz RBZ')
	patterns.append(sbz1vezgbzrbz)
	names.append('sbz1vezgbzrbz')
	#SBZ1 Vez-gbz sbz1	(([msd=Gp.*([deprel=ena&msd=So..i])([deprel=dol&msd=So..i]))|(([msd=Gg.*&lemma=(postati|postajati|ostati|ostajati|izpasti)]|[msd=Gg.*&lemma=(zdeti|počutiti|delati)([deprel=del&msd=Z.*]))([deprel=ena&msd=So..i])([deprel=dve&msd=So..i])))
	#Vez-gbz %s SBZ2	([msd=Gp.*]([deprel=(tri|štiri)&msd=Dr]([deprel=dol&msd=S…r])))
	vezgbzdsbz2=Tree()
	vezgbzdsbz2.add_node(0,vezgbzdsbz2,lambda x:x.data['msd'].startswith('Gp'),relation='print')
	vezgbzdsbz2.add_node(1,0,lambda x:x.data['deprel'] in ('tri','stiri') and x.data['msd'].startswith('Dr'))
	vezgbzdsbz2.add_node(2,1,lambda x:x.data['deprel']=='dol' and re.match(r'S...r',x.data['msd'])!=None,relation=lambda x:'Vez-gbz '+x.nodes[1].found['lemma']+' SBZ2')
	patterns.append(vezgbzdsbz2)
	names.append('vezgbzdsbz2')
	#vez-gbz %s SBZ3	([msd=Gp.*]([deprel=(tri|štiri)&msd=Dd]([deprel=dol&msd=S…d])))
	vezgbzdsbz3=Tree()
	vezgbzdsbz3.add_node(0,vezgbzdsbz3,lambda x:x.data['msd'].startswith('Gp'),relation='print')
	vezgbzdsbz3.add_node(1,0,lambda x:x.data['deprel'] in ('tri','stiri') and x.data['msd'].startswith('Dd'))
	vezgbzdsbz3.add_node(2,1,lambda x:x.data['deprel']=='dol' and re.match(r'S...d',x.data['msd'])!=None,relation=lambda x:'Vez-gbz '+x.nodes[1].found['lemma']+' SBZ3')
	patterns.append(vezgbzdsbz3)
	names.append('vezgbzdsbz3')
	#vez-gbz %s SBZ4	([msd=Gp.*]([deprel=(tri|štiri)&msd=Dt]([deprel=dol&msd=S…t.*])))
	vezgbzdsbz4=Tree()
	vezgbzdsbz4.add_node(0,vezgbzdsbz4,lambda x:x.data['msd'].startswith('Gp'),relation='print')
	vezgbzdsbz4.add_node(1,0,lambda x:x.data['deprel'] in ('tri','stiri') and x.data['msd'].startswith('Dt'))
	vezgbzdsbz4.add_node(2,1,lambda x:x.data['deprel']=='dol' and re.match(r'S...t',x.data['msd'])!=None,relation=lambda x:'Vez-gbz '+x.nodes[1].found['lemma']+' SBZ4')
	patterns.append(vezgbzdsbz4)
	names.append('vezgbzdsbz4')
	#vez-gbz %s SBZ5	([msd=Gp.*]([deprel=(tri|štiri)&msd=Dm]([deprel=dol&msd=S…m])))
	vezgbzdsbz5=Tree()
	vezgbzdsbz5.add_node(0,vezgbzdsbz5,lambda x:x.data['msd'].startswith('Gp'),relation='print')
	vezgbzdsbz5.add_node(1,0,lambda x:x.data['deprel'] in ('tri','stiri') and x.data['msd'].startswith('Dm'))
	vezgbzdsbz5.add_node(2,1,lambda x:x.data['deprel']=='dol' and re.match(r'S...m',x.data['msd'])!=None,relation=lambda x:'Vez-gbz '+x.nodes[1].found['lemma']+' SBZ5')
	patterns.append(vezgbzdsbz5)
	names.append('vezgbzdsbz5')
	#vez-gbz %s SBZ6	([msd=Gp.*]([deprel=(tri|štiri)&msd=Do]([deprel=dol&msd=S…o])))
	vezgbzdsbz6=Tree()
	vezgbzdsbz6.add_node(0,vezgbzdsbz6,lambda x:x.data['msd'].startswith('Gp'),relation='print')
	vezgbzdsbz6.add_node(1,0,lambda x:x.data['deprel'] in ('tri','stiri') and x.data['msd'].startswith('Do'))
	vezgbzdsbz6.add_node(2,1,lambda x:x.data['deprel']=='dol' and re.match(r'S...o',x.data['msd'])!=None,relation=lambda x:'Vez-gbz '+x.nodes[1].found['lemma']+' SBZ6')
	patterns.append(vezgbzdsbz6)
	names.append('vezgbzdsbz6')
	#Vez-GBZ pbz4	([msd=Gg.*]([deprel=dol&msd=P....[tr].*]))
	vezgbzpbz4=Tree()
	vezgbzpbz4.add_node(0,vezgbzpbz4,lambda x:x.data['msd'].startswith('Gg'),relation=lambda x:'Vez-GBZ pbz4')
	vezgbzpbz4.add_node(1,0,lambda x:x.data['deprel']=='dol' and re.match(r'P....[tr]',x.data['msd'])!=None,relation=lambda x:'Vez-gbz PBZ4')
	patterns.append(vezgbzpbz4)
	names.append('vezgbzpbz4')
	#zveze s predlogi	([msd=D.*]([deprel=dol&msd=S.*]))
	zvezespredlogi=Tree()
	zvezespredlogi.add_node(0,zvezespredlogi,lambda x:x.data['msd'].startswith('D'),relation='print')
	zvezespredlogi.add_node(1,0,lambda x:x.data['deprel']=='dol' and x.data['msd'].startswith('S'),relation=lambda x:'zveze s predlogi')
	patterns.append(zvezespredlogi)
	names.append('zvezespredlogi')
	print len(patterns)
	sys.exit()
	sent=defaultdict(list)
	i=0
	for tree in kres_sent_trees(open('/home/nikola/kres_parsed/kres.S_N')):
		for pattern in patterns:
			for subtree in tree.search_subtrees(pattern):
				subtree.show_relations()

if __name__=='__main__':
	grammar_sl_v03()
